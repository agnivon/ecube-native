{"version":3,"sources":["src/config/index.js","src/actions/index.js","src/reducers/index.js","src/sagas/index.js","src/store.js","src/bootstrap.js","src/components/MovieCard.js","src/components/Space.js","src/components/MovieCardList.js","src/components/ActivityIndicatior.js","src/components/MessageDialog.js","src/containers/LatestMoviesPage.js","src/components/BookingDetailsCard.js","src/components/BookingCardList.js","src/containers/BookingsPage.js","src/containers/HomePage.js","src/components/MovieDetailsCard.js","src/hooks/index.js","src/containers/MovieDetailsPage.js","src/components/MovieBookingCard.js","src/containers/MovieBookingPage.js","src/containers/BookingDetailsPage.js","src/App.js","node_modules/react-native-bootstrap-styles/src sync"],"names":["currentDate","Date","now","BASE_API_URL","API_URLS","MOVIES","ALL","LATEST","RECOMMENDED","UPCOMING","actionTypes","initialState","movies","all","latest","recommended","upcoming","isLoading","errored","bookings","fetchMovies","watchFetchMovies","rootSaga","httpFetch","url","axios","get","then","response","data","action","category","payload","actionBase","put","type","FETCH_PENDING","call","FETCH_SUCCESS","FETCH_FAILURE","message","takeEvery","FETCH_REQUESTED","sagaMiddleware","createSagaMiddleware","store","createStore","state","CONFIRM_BOOKING","applyMiddleware","run","bootstrapStyleSheet","BootstrapStyleSheet","s","c","MovieCard","movie","navigation","useNavigation","TouchableOpacity","onPress","navigate","id","style","m3","Image","overflowHidden","width","height","source","uri","posterImg","View","p2","h3","title","h5","director","isDisabled","defaultRating","rating","showRating","size","flexDirection","justifyContent","marginTop","marginBottom","genre","map","x","i","value","status","containerStyle","mx1","cardTextLastChild","textAlign","plot","slice","Space","lines","dummyArray","Array","fill","_","idx","Text","renderItem","item","MovieCardList","DATA","flex1","FlatList","keyExtractor","ListFooterComponent","styles","StyleSheet","create","container","flex","horizontal","padding","ActivityIndicator","MessageDialog","text","useState","visible","setVisible","Pressable","current","marginVertical","isVisible","onBackdropPress","Title","LatestMoviesPage","useSelector","h1","textCenter","m2","length","StatusBar","BookingDetailsCard","booking","showButtons","listItems","label","bookingId","icon","showDate","timings","seats","ScrollView","name","Content","Divider","my1","initialPage","my2","BookingCardList","BookingsPage","HomePage","route","dispatch","useDispatch","params","useEffect","toUpperCase","getMovies","Tab","createBottomTabNavigator","Navigator","initialRouteName","screenOptions","tabBarIcon","iconName","focused","color","tabBarActiveTintColor","tabBarInactiveTintColor","headerShown","Screen","component","options","MovieDetailsCard","genreBadges","ratingStars","releaseDate","toLocaleDateString","duration","bottomDivider","includes","h4","useFindMovie","find","MovieDetailsPage","Dropdown","onChange","dropdown","placeholderStyle","selectedTextStyle","inputSearchStyle","iconStyle","search","maxHeight","labelField","valueField","placeholder","searchPlaceholder","MovieBookingCard","stringifyDate","dateInMillis","labelValue","String","onChangeProp","key","setBookingDetails","movieId","showings","date","bookingDetails","show","filter","timing","sha256","JSON","stringify","toString","backgroundColor","borderColor","borderWidth","borderRadius","paddingHorizontal","marginRight","position","left","top","zIndex","fontSize","MovieBookingPage","BookingDetailsPage","useFindBooking","Stack","createNativeStackNavigator","App","NavigationContainer","headerStyle","headerTintColor","headerTitleStyle","fontWeight","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports"],"mappings":"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","file":"static/js/app.0c3e69d5.chunk.js","sourcesContent":["const currentDate = Date.now();\nconst BASE_API_URL = \"https://nevo-json-server.herokuapp.com\";\nexport const API_URLS = {\n    MOVIES: {\n        ALL: `${BASE_API_URL}/movies`,\n        LATEST: `${BASE_API_URL}/movies?_sort=releaseDate&_order=desc&releaseDate_lte=${currentDate}&_limit=50`,\n        RECOMMENDED: `${BASE_API_URL}/movies?_sort=rating&_order=desc&_limit=24`,\n        UPCOMING: `${BASE_API_URL}/movies?releaseDate_gte=${currentDate}&_limit=24`\n    }\n}","import { API_URLS } from \"../config\";\n\nexport const actionTypes = {\n    'MOVIES': {\n        'FETCH_REQUESTED': 'movies/fetch/requested',\n        'FETCH_PENDING': 'movies/fetch/pending',\n        'FETCH_SUCCESS': 'movies/fetch/success',\n        'FETCH_FAILURE': 'movies/fetch/fail',\n        'CONFIRM_BOOKING': 'movies/booking/confirm'\n    }\n}\n\nexport const getMovies = (category = \"all\") => {\n    return ({\n        type: actionTypes.MOVIES.FETCH_REQUESTED,\n        payload: {\n            category: category,\n            url: API_URLS.MOVIES[category.toUpperCase()]\n        }\n    });\n}\n\nexport const confirmBooking = (booking) => {\n    return ({\n        type: actionTypes.MOVIES.CONFIRM_BOOKING,\n        payload: booking\n    });\n}","import { actionTypes } from \"../actions\";\n\nconst initialState = {\n    movies: {\n        all: [],\n        latest: [],\n        recommended: [],\n        upcoming: []\n    },\n    isLoading: {\n        movies: false,\n    },\n    errored: {\n        movies: false,\n    },\n    bookings: []\n}\n\nexport const rootReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.MOVIES.FETCH_PENDING:\n            return {\n                ...state,\n                isLoading: {\n                    ...state.isLoading,\n                    movies: true\n                }\n            }\n        case actionTypes.MOVIES.FETCH_SUCCESS:\n            return {\n                ...state,\n                movies: {\n                    ...state.movies,\n                    [action.category]: action.data\n                },\n                isLoading: {\n                    ...state.isLoading,\n                    movies: false\n                }\n            }\n        case actionTypes.MOVIES.FETCH_FAILURE:\n            return {\n                ...state,\n                isLoading: {\n                    ...state.isLoading,\n                    movies: false\n                },\n                errored: {\n                    ...state.errored,\n                    movies: true\n                }\n            }\n        case actionTypes.MOVIES.CONFIRM_BOOKING:\n            return {\n                ...state,\n                bookings: [...state.bookings, action.payload]\n            }\n        default:\n            return state;\n    }\n}","import { put, takeEvery, all, call } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport { actionTypes } from '../actions';\n\nfunction httpFetch(url) {\n    return axios.get(url)\n        .then(response => response.data)\n}\n\nfunction* fetchMovies(action) {\n    const category = action.payload.category;\n    const actionBase = actionTypes.MOVIES;\n    try {\n        yield put({ type: actionBase.FETCH_PENDING, category: category });\n        const data = yield call(httpFetch, action.payload.url);\n        yield put({ type: actionBase.FETCH_SUCCESS, category: category, data: data });\n    } catch (e) {\n        yield put({ type: actionBase.FETCH_FAILURE, category: category, message: e.message });\n    }\n}\n\nfunction* watchFetchMovies() {\n    yield takeEvery([\n        actionTypes.MOVIES.FETCH_REQUESTED,\n    ], fetchMovies);\n}\n\n\nexport default function* rootSaga() {\n    yield all([\n        watchFetchMovies()\n    ]);\n}","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga'\n\nimport { rootReducer } from './reducers';\nimport rootSaga from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;","import BootstrapStyleSheet from 'react-native-bootstrap-styles';\n\nconst bootstrapStyleSheet = new BootstrapStyleSheet();\nexport const { s, c } = bootstrapStyleSheet;","import { View, TouchableOpacity } from 'react-native';\nimport { Text, Card, AirbnbRating, Badge, Button } from '@rneui/themed';\nimport { s } from '../bootstrap';\nimport { useNavigation } from '@react-navigation/native';\n\nexport default function MovieCard({ movie }) {\n\n    const navigation = useNavigation();\n\n    return (\n        <TouchableOpacity\n            onPress={() => navigation.navigate(\"Details\", { id: movie.id })}>\n            <Card style={[s.m3]}>\n                <Card.Image style={[s.overflowHidden, {\n                    width: '100%',\n                    height: 200\n                }]} source={{ uri: movie.posterImg }} />\n                <View>\n                    <View style={[s.p2]}>\n                        <Text h3>{movie.title}</Text>\n                        <Text h5>{movie.director}</Text>\n                    </View>\n                    <AirbnbRating isDisabled={true} defaultRating={movie.rating}\n                        showRating={false} size={20} />\n                    <View\n                        style={{\n                            flexDirection: 'row',\n                            justifyContent: 'flex-start',\n                            marginTop: 10,\n                            marginBottom: 10,\n                        }}\n                    >\n                        {movie.genre.map((x, i) => {\n                            return (<Badge value={x} key={i} status=\"warning\"\n                                containerStyle={[s.mx1]} />);\n                        })}\n                    </View>\n                    <Text style={[s.cardTextLastChild, s.p2, {\n                        textAlign: 'justify'\n                    }]}>{movie.plot.slice(0, 200)}...</Text>\n                    <Button size=\"md\" onPress={() => {\n                        navigation.navigate('Book', {\n                            id: movie.id\n                        });\n                    }}>Book</Button>\n                </View>\n            </Card>\n        </TouchableOpacity>\n    );\n}","import { Text } from 'react-native';\n\nexport default function Space({ lines = 5 }) {\n\n    const dummyArray = (new Array(lines)).fill(0);\n\n    return (\n        <>\n            {dummyArray.map((_, idx) => (<Text key={idx}></Text>))}\n        </>\n    );\n}","import { View, FlatList } from 'react-native';\nimport { s, c } from '../bootstrap';\n\nimport MovieCard from './MovieCard';\nimport Space from './Space';\n\nconst renderItem = ({ item }) => {\n    return (\n        <MovieCard key={item.id} movie={item} />\n    );\n}\n\nexport default function MovieCardList({ movies }) {\n\n    const DATA= movies;\n\n    return (\n        <View style={[s.flex1]}>\n            <FlatList\n                data={DATA}\n                renderItem={renderItem}\n                keyExtractor={item => item.id}\n                ListFooterComponent={<Space lines={8} />}\n            />\n        </View>\n    );\n}","import React from \"react\";\nimport { ActivityIndicator as AI, StyleSheet, View } from \"react-native\";\n\nconst ActivityIndicator = () => (\n  <View style={[styles.container, styles.horizontal]}>\n    <AI size=\"large\" />\n  </View>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\"\n  },\n  horizontal: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    padding: 10\n  }\n});\n\nexport default ActivityIndicator;","import React, { useState } from 'react';\nimport { Dialog } from '@rneui/themed';\nimport { View, Text, StyleSheet, Pressable } from 'react-native';\n\nconst MessageDialog = ({ title, text }) => {\n\n    const [visible, setVisible] = useState(true);\n\n    const toggleDialog = () => setVisible(current => !current);\n\n    return (\n        <Pressable onPress={() => toggleDialog()}\n        style={{\n            height: '100%'\n        }}>\n            <Text style={{\n                textAlign: 'center',\n                marginVertical: 20\n            }}>No bookings!</Text>\n            <Dialog\n                isVisible={visible}\n                onBackdropPress={() => setVisible(false)}\n            >\n                <Dialog.Title title={title} />\n                <Text>{text}</Text>\n            </Dialog>\n        </Pressable>\n    );\n}\n\nexport default MessageDialog;","import { StatusBar } from 'expo-status-bar';\nimport { View } from 'react-native';\nimport { s } from '../bootstrap';\nimport { Text, Divider } from '@rneui/themed';\nimport { useSelector } from 'react-redux';\n\nimport MovieCardList from '../components/MovieCardList';\nimport ActivityIndicator from '../components/ActivityIndicatior';\nimport MessageDialog from '../components/MessageDialog';\n\nexport default function LatestMoviesPage({ navigation }) {\n\n    const movies = useSelector(state => state.movies.latest);\n    const moviesIsLoading = useSelector(state => state.isLoading.movies);\n    // const isMoviesErrored = useSelector(state => state.errored.movies);\n\n    if (moviesIsLoading) {\n        return (<ActivityIndicator />);\n    }\n\n    return (\n        <View style={[s.container, s.flex1]}>\n            <Text h1 style={[s.textCenter, s.m2]}>\n                Latest Movies\n            </Text>\n            <Divider />\n            {movies.length ? <MovieCardList movies={movies} /> :\n                <MessageDialog title=\"No movies found\"\n                    text=\"No movies available currently\" />}\n            <StatusBar style=\"auto\" />\n        </View>\n    );\n}","import { View, ScrollView } from 'react-native';\nimport { Text, Card, Button } from '@rneui/themed';\nimport { s } from '../bootstrap';\nimport { Icon, ListItem } from '@rneui/base';\nimport { useNavigation } from '@react-navigation/native';\nimport Space from './Space';\n\nconst renderItem = ({ item, idx }) => {\n    return (\n        <ListItem key={idx}>\n            <Icon name={item.icon} />\n            <ListItem.Content>\n                <ListItem.Title>{item.label}</ListItem.Title>\n                <Text>{item.value}</Text>\n            </ListItem.Content>\n        </ListItem>\n    );\n}\n\nexport default function BookingDetailsCard({ booking, showButtons = true }) {\n\n    const navigation = useNavigation();\n\n    const listItems = [\n        { label: 'Booking ID', value: booking.bookingId, icon: 'info' },\n        { label: 'Movie Title', value: booking.movie.title, icon: 'theaters' },\n        { label: 'Show Date', value: booking.showDate, icon: 'today' },\n        { label: 'Show Timings', value: booking.timings, icon: 'schedule' },\n        { label: 'Seats', value: booking.seats, icon: 'star' }\n    ]\n\n    return (\n        <ScrollView>\n            <Card style={[s.m3]}>\n                <Card.Image style={[s.overflowHidden, {\n                    width: '100%',\n                    height: 200\n                }]} source={{ uri: booking.movie.posterImg }} />\n                <View>\n                    {listItems.map((item, idx) => {\n                        return (renderItem({ item, idx }))\n                    })}\n                    {showButtons && (\n                        <>\n                            <Card.Divider />\n                            <Button size=\"md\" onPress={() => {\n                                navigation.navigate('Bookings');\n                            }} containerStyle={[s.my1]}>\n                                Go to my Bookings\n                            </Button>\n                            <Button size=\"md\" onPress={() => {\n                                navigation.navigate('Home', {\n                                    initialPage: 'Bookings'\n                                });\n                            }} containerStyle={[s.my2]}>\n                                Go to Home\n                            </Button>\n                        </>\n                    )\n                    }\n                </View>\n            </Card>\n            {showButtons && <Space lines={5} />}\n        </ScrollView>\n\n    );\n}","import { View, FlatList, Text } from 'react-native';\nimport { s, c } from '../bootstrap';\n\nimport BookingDetailsCard from './BookingDetailsCard';\nimport Space from './Space';\n\nconst renderItem = ({ item }) => {\n    return (\n        <BookingDetailsCard key={item.bookingId} booking={item} showButtons={false} />\n    );\n}\n\nexport default function BookingCardList({ bookings }) {\n\n    const DATA = bookings;\n\n    return (\n        <View style={[s.flex1]}>\n            <FlatList\n                data={DATA}\n                renderItem={renderItem}\n                keyExtractor={item => item.bookingId}\n                ListFooterComponent={<Space lines={8} />}\n            />\n        </View>\n    );\n}","import { StatusBar } from 'expo-status-bar';\nimport { View } from 'react-native';\nimport { s } from '../bootstrap';\nimport { Text, Divider } from '@rneui/themed';\n\nimport BookingCardList from '../components/BookingCardList';\nimport MessageDialog from '../components/MessageDialog'\nimport { useSelector } from 'react-redux';\n\n\nexport default function BookingsPage({ navigation }) {\n\n    const bookings = useSelector(state => state.bookings);\n\n    return (\n        <View style={[s.container, s.flex1]}>\n            <Text h1 style={[s.textCenter, s.m2]}>\n                Bookings\n            </Text>\n            <Divider />\n            {bookings.length ? <BookingCardList bookings={bookings}/> :\n            <MessageDialog title=\"No Bookings\" text=\"Make a booking to see bookings here\"/>}\n            <StatusBar style=\"auto\" />\n        </View>\n    );\n}","import { Text, View } from 'react-native';\nimport { s } from '../bootstrap';\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getMovies } from '../actions';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\n\nimport LatestMoviesPage from './LatestMoviesPage';\nimport BookingsPage from './BookingsPage';\nimport { Icon } from \"@rneui/themed\";\n\nexport default function HomePage({ route, navigation }) {\n\n    const dispatch = useDispatch();\n\n    const initialPage = route.params?.initialPage || 'LatestMovies';\n\n    useEffect(() => {\n        dispatch(getMovies('latest'));\n    }, [dispatch]);\n\n    const Tab = createBottomTabNavigator();\n\n    return (\n        <Tab.Navigator initialRouteName={initialPage}\n            screenOptions={({ route }) => ({\n                tabBarIcon: ({ focused, color, size }) => {\n                    let iconName;\n\n                    if (route.name === 'LatestMovies') {\n                        iconName = focused\n                            ? 'home'\n                            : 'home';\n                    } else if (route.name === 'Bookings') {\n                        iconName = focused ? 'ticket' : 'ticket';\n                    }\n                    return <Icon name={iconName} type=\"font-awesome\" />;\n                },\n                tabBarActiveTintColor: 'tomato',\n                tabBarInactiveTintColor: 'gray',\n                headerShown: false\n            })}>\n            <Tab.Screen name=\"LatestMovies\" component={LatestMoviesPage} options={{ title: 'Latest Movies' }} />\n            <Tab.Screen name=\"Bookings\" component={BookingsPage} />\n        </Tab.Navigator>\n    );\n}","import { View, ScrollView } from 'react-native';\nimport { Text, Card, AirbnbRating, Badge, Button } from '@rneui/themed';\nimport { s } from '../bootstrap';\nimport { Icon, ListItem } from '@rneui/base';\nimport { useNavigation } from '@react-navigation/native';\n\nimport Space from './Space';\n\nconst renderItem = ({ item, idx }) => {\n    return (\n        <ListItem bottomDivider key={idx}>\n            <Icon name={item.icon} />\n            <ListItem.Content>\n                <ListItem.Title>{item.label}</ListItem.Title>\n                {(!(['Genre', 'Rating'].includes(item.label))) ?\n                    <Text>{item.value}</Text> : <>{item.value}</>}\n            </ListItem.Content>\n        </ListItem>\n    );\n}\n\nexport default function MovieDetailsCard({ movie }) {\n\n    const navigation = useNavigation();\n\n    const genreBadges = (\n        <View\n            style={{\n                flexDirection: 'row',\n                justifyContent: 'flex-start',\n                marginTop: 10,\n                marginBottom: 10,\n            }}\n        >\n            {movie.genre.map((x, i) => {\n                return (<Badge value={x} key={i} status=\"warning\"\n                    containerStyle={[s.mx1]} />);\n            })}\n        </View>\n    );\n\n    const ratingStars = (<AirbnbRating isDisabled={true} defaultRating={movie.rating}\n        showRating={false} size={20} />);\n\n    const listItems = [\n        { label: 'Title', value: movie.title, icon: 'theaters' },\n        { label: 'Director', value: movie.director, icon: 'person' },\n        { label: 'Genre', value: genreBadges, icon: 'info' },\n        { label: 'Release Date', value: (new Date(movie.releaseDate)).toLocaleDateString(), icon: 'event' },\n        { label: 'Duration', value: movie.duration, icon: 'timelapse'},\n        { label: 'Rating', value: ratingStars, icon: 'star' }\n    ]\n\n    return (\n        <ScrollView>\n            <Card style={[s.m3]}>\n                <Card.Image style={[s.overflowHidden, {\n                    width: '100%',\n                    height: 200\n                }]} source={{ uri: movie.posterImg }} />\n                <View>\n                    {/* <FlatList\n                    data={DATA}\n                    renderItem={renderItem}\n                /> */}\n                    {listItems.map((item, idx) => {\n                        return (renderItem({ item, idx }))\n                    })}\n                    <Card.Divider />\n                    <Text h4>Plot</Text>\n                    <Text style={{ textAlign: 'justify' }}>{movie.plot}</Text>\n                    <Button size=\"md\" onPress={() => {\n                        navigation.navigate('Book', { id: movie.id });\n                    }}>Book</Button>\n                </View>\n            </Card>\n            <Space lines={5} />\n        </ScrollView>\n\n    );\n}","import _ from 'lodash';\nimport { useSelector } from 'react-redux';\n\nexport function useFindMovie(id) {\n    const movies = useSelector(state => state.movies.latest);\n    const movie = _.find(movies, { id: id });\n    return movie;\n}\n\nexport function useFindBooking(bookingId) {\n    const bookings = useSelector(state => state.bookings);\n    const booking = _.find(bookings, { \n        bookingId: bookingId\n    });\n    return booking;\n}","import { StatusBar } from 'expo-status-bar';\nimport { View, ScrollView, FlatList } from 'react-native';\nimport { s } from '../bootstrap';\nimport { Text, Divider } from '@rneui/themed';\n\nimport MovieDetailsCard from '../components/MovieDetailsCard';\nimport { useFindMovie } from '../hooks';\n\nexport default function MovieDetailsPage({ route }) {\n\n    const movie = useFindMovie(route.params.id);\n\n    return (\n        <View style={[s.container]}>\n            <Text h1 style={[s.textCenter, s.m2]}>\n                Movie Details\n            </Text>\n            <Divider />\n            {/* <FlatList \n                data={[1, 2, 3, 4, 5]}\n                renderItem={() =><Text></Text>}\n                ListHeaderComponent={<MovieDetailsCard movie={movie}/>}\n            /> */}\n            <MovieDetailsCard movie={movie} />\n            <StatusBar style=\"auto\" />\n        </View>\n    );\n}","import { View, ScrollView, StyleSheet } from 'react-native';\nimport { Text, Card, Button } from '@rneui/themed';\nimport { s } from '../bootstrap';\nimport { Icon, ListItem } from '@rneui/base';\nimport React, { useState } from 'react';\nimport { Dropdown as RNEDropdown } from 'react-native-element-dropdown';\nimport { useNavigation } from '@react-navigation/native';\nimport { useDispatch } from 'react-redux';\nimport { confirmBooking } from '../actions';\n\nimport Space from './Space';\nimport sha256 from 'crypto-js/sha256';\n\nconst renderItem = ({ item, idx }) => {\n    return (\n        <ListItem bottomDivider key={idx}>\n            <Icon name={item.icon} />\n            <ListItem.Content>\n                <ListItem.Title>{item.label}</ListItem.Title>\n                {item.value}\n            </ListItem.Content>\n        </ListItem>\n    );\n}\n\nconst Dropdown = ({ data, value, onChange }) => {\n    // console.log(data, value);\n    return (\n        <RNEDropdown\n            style={styles.dropdown}\n            placeholderStyle={styles.placeholderStyle}\n            selectedTextStyle={styles.selectedTextStyle}\n            inputSearchStyle={styles.inputSearchStyle}\n            iconStyle={styles.iconStyle}\n            data={data}\n            search\n            maxHeight={300}\n            labelField=\"label\"\n            valueField=\"value\"\n            placeholder=\"Select item\"\n            searchPlaceholder=\"Search...\"\n            value={value}\n            onChange={onChange}\n        />\n    );\n}\n\nexport default function MovieBookingCard({ movie }) {\n\n    const navigation = useNavigation();\n    const dispatch = useDispatch();\n\n    const stringifyDate = (dateInMillis) => {\n        return (new Date(dateInMillis)).toLocaleDateString();\n    }\n\n    const labelValue = (x) => {\n        return ({\n            label: String(x),\n            value: String(x)\n        });\n    }\n\n    const onChangeProp = (key) => {\n        return (\n            (item) => setBookingDetails(current => {\n                // console.log(current);\n                return ({\n                    ...current,\n                    [key]: item.value\n                });\n            })\n        );\n    }\n\n    const submitBooking = () => {\n        const bookingId = sha256(JSON.stringify(bookingDetails)).toString();\n        dispatch(confirmBooking(\n            {\n                ...bookingDetails,\n                bookingId: bookingId\n            }\n        ));\n        navigation.navigate('Booking', { id: bookingId });\n    }\n\n    const [bookingDetails, setBookingDetails] = useState({\n        bookingId: null,\n        movieId: movie.id,\n        showDate: stringifyDate(movie.showings[0].date),\n        timings: '',\n        seats: '1',\n        movie: movie\n    });\n\n    // console.log(bookingDetails);\n\n    const listItems = [\n        {\n            label: 'Title',\n            value: <Text>{movie.title}</Text>,\n            icon: 'theaters'\n        },\n        {\n            label: 'Show Date',\n            value: <Dropdown\n                data={movie.showings\n                    .map(show => labelValue(stringifyDate(show.date)))}\n                value={bookingDetails.showDate}\n                onChange={onChangeProp('showDate')}\n            />,\n            icon: 'today'\n        },\n        {\n            label: 'Timings',\n            value: <Dropdown\n                data={movie.showings\n                    .filter(show => stringifyDate(show.date) === bookingDetails.showDate)\n                [0].timings\n                    .map(timing => labelValue(timing))}\n                value={bookingDetails.timings}\n                onChange={onChangeProp('timings')}\n            />,\n            icon: 'schedule'\n        },\n        {\n            label: 'No. of seats',\n            value: <Dropdown\n                data={[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(x => labelValue(x))}\n                value={bookingDetails.seats}\n                onChange={onChangeProp('seats')}\n            />,\n            icon: 'star'\n        },\n    ]\n\n    return (\n        <ScrollView>\n            <Card style={[s.m3]}>\n                <Card.Image style={[s.overflowHidden, {\n                    width: '100%',\n                    height: 200\n                }]} source={{ uri: movie.posterImg }} />\n                <View>\n                    {listItems.map((item, idx) => {\n                        return (renderItem({ item, idx }))\n                    })}\n                    <Card.Divider />\n                    <Button size=\"md\" onPress={submitBooking}>Confirm Booking</Button>\n                </View>\n            </Card>\n            <Space lines={5} />\n        </ScrollView>\n\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: 'white',\n        padding: 16,\n\n    },\n    dropdown: {\n        height: 50,\n        width: 200,\n        borderColor: 'gray',\n        borderWidth: 0.5,\n        borderRadius: 8,\n        paddingHorizontal: 8,\n        marginVertical: 5\n    },\n    icon: {\n        marginRight: 5,\n    },\n    label: {\n        position: 'absolute',\n        backgroundColor: 'white',\n        left: 22,\n        top: 8,\n        zIndex: 999,\n        paddingHorizontal: 8,\n        fontSize: 14,\n    },\n    placeholderStyle: {\n        fontSize: 16,\n    },\n    selectedTextStyle: {\n        fontSize: 16,\n    },\n    iconStyle: {\n        width: 20,\n        height: 20,\n    },\n    inputSearchStyle: {\n        height: 40,\n        fontSize: 16,\n    },\n});","import { StatusBar } from 'expo-status-bar';\nimport { View } from 'react-native';\nimport { s } from '../bootstrap';\nimport { Text, Divider } from '@rneui/themed';\n\nimport MovieBookingCard from '../components/MovieBookingCard';\nimport { useFindMovie } from '../hooks';\n\nexport default function MovieBookingPage({ route }) {\n\n    const movie = useFindMovie(route.params.id);\n\n    return (\n        <View style={[s.container]}>\n            <Text h1 style={[s.textCenter, s.m2]}>\n                Book Show\n            </Text>\n            <Divider />\n            <MovieBookingCard movie={movie} />\n            <StatusBar style=\"auto\" />\n        </View>\n    );\n}","import { StatusBar } from 'expo-status-bar';\nimport { View } from 'react-native';\nimport { s } from '../bootstrap';\nimport { Text, Divider } from '@rneui/themed';\nimport BookingDetailsCard from '../components/BookingDetailsCard';\n\nimport { useFindBooking } from '../hooks';\n\nexport default function BookingDetailsPage({ route }) {\n\n    const booking = useFindBooking(route.params.id);\n\n    return (\n        <View style={[s.container]}>\n            <Text h1 style={[s.textCenter, s.m2]}>\n                Booking Details\n            </Text>\n            <Divider />\n            <BookingDetailsCard booking={booking} />\n            <StatusBar style=\"auto\" />\n        </View>\n    );\n}","import { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nconst Stack = createNativeStackNavigator();\n\nimport { Provider, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { getMovies } from './actions';\nimport store from './store';\n\nimport HomePage from './containers/HomePage';\nimport MovieDetailsPage from './containers/MovieDetailsPage';\nimport MovieBookingPage from './containers/MovieBookingPage';\nimport BookingDetailsPage from './containers/BookingDetailsPage';\nimport BookingsPage from './containers/BookingsPage';\n\nexport default function App() {\n\n  return (\n    <Provider store={store}>\n      <NavigationContainer>\n        <Stack.Navigator screenOptions={{\n          headerStyle: {\n            backgroundColor: '#f4511e',\n          },\n          headerTintColor: '#fff',\n          headerTitleStyle: {\n            fontWeight: 'bold',\n          },\n        }}>\n          <Stack.Screen name=\"Home\" component={HomePage} options={{\n            title: 'Home'\n          }} />\n          <Stack.Screen name=\"Details\" component={MovieDetailsPage} options={{\n            title: 'Details'\n          }} />\n          <Stack.Screen name=\"Book\" component={MovieBookingPage} options={{\n            title: 'Book'\n          }} />\n          <Stack.Screen name=\"Booking\" component={BookingDetailsPage} options={{\n            title: 'Booking'\n          }} />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </Provider>\n  );\n}\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 372;"],"sourceRoot":""}